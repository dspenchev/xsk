name: Release

on:
  push:
    tags:
    - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.11%2B8/sapmachine-jdk-11.0.11-ea.8_linux-x64_bin.tar.gz"
        wget -O ${RUNNER_TEMP}/java_package.tar.gz ${download_url}
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/java_package.tar.gz
        java-version: '11.0.11'
        architecture: x64
    - name: Set XSK Version
      run: echo XSK_VERSION=${GITHUB_REF#refs/*/} | tr v " " | sed 's/ //'  >> $GITHUB_ENV
    - name: Maven Build
      run: mvn clean install
    - name: Dodcker Login
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    - name: Push XSK
      run: |
        cd releng/server
        docker build -t dirigiblelabs/xsk:$XSK_VERSION .
        docker push dirigiblelabs/xsk:$XSK_VERSION
        cd ../../
    - name: Push XSK for SAP Cloud Foundry
      run: |
        cd releng/sap-cf
        docker build -t dirigiblelabs/xsk-cf:$XSK_VERSION .
        docker push dirigiblelabs/xsk-cf:$XSK_VERSION
        cd ../../
    - name: Push XSK for SAP Kyma
      run: |
        cd releng/sap-kyma
        docker build -t dirigiblelabs/xsk-kyma:$XSK_VERSION .
        docker push dirigiblelabs/xsk-kyma:$XSK_VERSION
        cd ../../

#----------------Publish GitHub Release------------------#

    - name: Package WAR files
      run: |
        zip --junk-paths server releng/server/target/ROOT.war

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ env.XSK_VERSION }}
        release_name: ${{ env.XSK_VERSION }}
        draft: false
        prerelease: false
        body: |
          ## XSK - ${{ env.XSK_VERSION }}
         
          #### Docker images:
            - [dirigiblelabs/xsk](https://hub.docker.com/r/dirigiblelabs/xsk/tags?page=1&ordering=last_updated) - XSK Server.
            - [dirigiblelabs/xsk-cf](https://hub.docker.com/r/dirigiblelabs/xsk-cf/tags?page=1&ordering=last_updated) - XSK Cloud Foundry.
            - [dirigiblelabs/xsk-kyma](https://hub.docker.com/r/dirigiblelabs/xsk-kyma/tags?page=1&ordering=last_updated) - XSK Kyma.

          #### Available for download `*.war` packages:
            - [server](https://github.com/sap/xsk/releases/download/v${{ env.XSK_VERSION }}/server.zip) - XSK Server.
            
          > _**Note:** Unzip the downloaded file to extract the `ROOT.war` binary._
          
          For more infromation go to [https://www.dirigible.io/help/setup/](https://www.dirigible.io/help/setup/).
          
    - name: Upload Server
      id: upload-server 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server.zip
        asset_name: server.zip
        asset_content_type: application/zip

#----------------Publish GitHub Release------------------#

#-----------------Create GitHub Branch-------------------#

    - name: Create GitHub Branch
      run: |
        git checkout -b $XSK_VERSION
        git push origin $XSK_VERSION

#-----------------Create GitHub Branch-------------------#

#------------------Update XSK Instance-------------------#

#    - name: Kubectl tool installer
#      uses: Azure/setup-kubectl@v1
#    - name: Setup Kube Config File
#      run: |
#        mkdir $HOME/.kube
#        echo "${{ secrets.KUBE_CONFIG }}" >> $HOME/.kube/config
#    - name: Update XSK Instance
#      run: kubectl set image deployment/xsk xsk=dirigiblelabs/xsk-kyma:$XSK_VERSION

#------------------Update XSK Instance-------------------#